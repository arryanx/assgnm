#include <iostream>
#include <bits/stdc++.h>
using namespace std;
#define n 3
void gaussElimination(float mat[n][n + 1])
{
    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < n; j++)
        {
            if (j > i)
            {
                float ratio = mat[j][i] / mat[i][i];
                for (int k = 0; k <= n + 1; k++)
                {
                    mat[j][k] = mat[j][k] - (ratio * mat[i][k]);
                }
            }
        }
    }
}
void ApplyBackSubstitution(float mat[n][n + 1], float value[])
{
    value[n - 1] = mat[n - 1][n] / mat[n - 1][n - 1];
    for (int i = n - 2; i >= 0; i--)
    {
        float sum = 0;
        for (int j = i + 1; j < n; j++)
        {
            sum = sum + mat[i][j] * value[j];
        }
        value[i] = (mat[i][n] - sum) / mat[i][i];
    }
}
void print(float value[])
{
    cout << "Values of unknowns are:" << endl;
    for (int i = 0; i < n; i++)
    {
        cout << "Value[" << i + 1 << "] = " << value[i] << endl;
    }
}
int main()
{
    float mat[n][n + 1] = {{1, -1, 2, 3}, {1, 2, 3, 5}, {3, -4, -5, -1}};
    float value[n];
    gaussElimination(mat);
    ApplyBackSubstitution(mat, value);
    print(value);
    return 0;
}